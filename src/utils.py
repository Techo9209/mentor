#!/usr/bin/env python
# -*- coding: iso-8859-2 -*-
#
# Copyright (C) 2007 Adam Folmert <afolmert@gmail.com>
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
#
"""General utility functions.

This is a grab-bag for all useful general-purpose functions I use in the mentor
project.
These function may be well used in another project.
"""

import os
import time
from misc import log



def get_git_root_dir(path):
    """Returns Git root path for given file, if file is in Git repository."""
    path = os.path.abspath(path)
    parent = os.path.dirname(path)
    # go up recursively until find .git dir or go to top directory
    while not os.path.isdir(os.path.join(path, '.git')) and path != '' and path != parent:
        path = parent
        parent = os.path.dirname(path)

    if os.path.isdir(os.path.join(path, '.git')) and \
        os.path.isdir(os.path.join(path, '.git/refs')) and \
        os.path.isfile(os.path.join(path, '.git/HEAD')):
        return os.path.join(path, '.git')
    else:
        return None



def generate_buildno(path):
    """Generates build number in build_stamp.py file, which gets imported to
    read the current build version.
    The build number is generated as current date yyyymmdd plus 6 digits of
    current head git sha1 code.
    """
    # generate current date
    builddate = time.strftime('%y%m%d')

    # try to find .git head tip and use it as a tip
    # else read embedded number by the build script.
    buildsha1 = ''
    git_root_dir = get_git_root_dir(path)
    if git_root_dir:
        head = open(os.path.join(git_root_dir, 'HEAD')).read().strip()[5:]
        log('head file : $head')
        headsha1 = open(os.path.join(git_root_dir, head)).read().strip()
        buildsha1 = headsha1[0:6]
    else:
        return None

    return builddate + '.' + buildsha1


def load_stamped_buildno():
    buildno = None
    try:
        import build_stamp
        buildno = build_stamp.buildno
    except:
        raise
#         pass
    return buildno


def save_stamped_buildno():
    git_root_dir = get_git_root_dir(os.getcwd())
    root_dir = os.path.dirname(git_root_dir)
    assert root_dir <> '', 'GIT root dir not found!'
    f = open(os.path.join(root_dir, 'src/build_stamp.py'), 'wt')
    f.write('#!/bin/env python\n')
    f.write('# DO NOT EDIT THIS FILE.\n')
    f.write('# This file is generated automatically by the build.py script.\n')
    f.write('# All contents here will be overwritten.\n\n')
    f.write('buildno = "%s"' % generate_buildno(root_dir))
    f.close()

